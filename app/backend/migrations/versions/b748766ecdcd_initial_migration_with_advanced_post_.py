"""Initial migration with advanced Post fields

Revision ID: b748766ecdcd
Revises: 
Create Date: 2025-07-22 13:41:42.487428

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b748766ecdcd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('jobs')
    with op.batch_alter_table('post_likes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_post_likes_post_id'))
        batch_op.drop_index(batch_op.f('idx_post_likes_user_id'))

    op.drop_table('post_likes')
    op.drop_table('messages')
    with op.batch_alter_table('post_comments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_post_comments_created_at'))
        batch_op.drop_index(batch_op.f('idx_post_comments_parent_id'))
        batch_op.drop_index(batch_op.f('idx_post_comments_post_id'))
        batch_op.drop_index(batch_op.f('idx_post_comments_user_id'))

    op.drop_table('post_comments')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('post_comments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('post_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('parent_id', sa.INTEGER(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['post_comments.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('post_comments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_post_comments_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_post_comments_post_id'), ['post_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_post_comments_parent_id'), ['parent_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_post_comments_created_at'), ['created_at'], unique=False)

    op.create_table('messages',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('sender_id', sa.INTEGER(), nullable=False),
    sa.Column('recipient_id', sa.INTEGER(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_likes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('post_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('post_id', 'user_id', name=op.f('unique_post_like'))
    )
    with op.batch_alter_table('post_likes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_post_likes_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_post_likes_post_id'), ['post_id'], unique=False)

    op.create_table('jobs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=120), nullable=False),
    sa.Column('company', sa.VARCHAR(length=120), nullable=False),
    sa.Column('location', sa.VARCHAR(length=120), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
